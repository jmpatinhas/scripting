// UiPath Invoke Code Activity
// Output argument: output (String)

DateTime startTime = DateTime.Now;
TimeSpan timeout = TimeSpan.FromMinutes(5);
bool syncCompleted = false;

try
{
    var outlookApp = new Microsoft.Office.Interop.Outlook.Application();
    var outlookNs = outlookApp.GetNamespace("MAPI");
    var syncObjects = outlookNs.SyncObjects;

    System.Threading.AutoResetEvent syncDoneEvent = new System.Threading.AutoResetEvent(false);

    for (int i = 1; i <= syncObjects.Count; i++)
    {
        var syncObj = syncObjects[i];

        ((Microsoft.Office.Interop.Outlook.SyncObjectEvents_Event)syncObj).SyncEnd +=
            new Microsoft.Office.Interop.Outlook.SyncObjectEvents_SyncEndEventHandler(() =>
            {
                syncCompleted = true;
                syncDoneEvent.Set();
            });

        // Force a sync cycle for this object
        syncObj.Start();
    }

    // Wait for at least one SyncEnd or until timeout
    if (syncDoneEvent.WaitOne(timeout))
    {
        syncCompleted = true;
    }
    else
    {
        syncCompleted = false;
    }
}
catch
{
    syncCompleted = false;
}

output = syncCompleted ? "True" : "False";
