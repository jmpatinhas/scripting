SELECT 
    i.INV_SYMBOL as TIDES_SYMBOL,
    
    -- Basic Exposure Metrics
    COUNT(DISTINCT i.CASE_ID) as COUNT_IN_STATEMENTS,
    SUM(i.TIDES_INV_QTY) as OVERALL_INV_QTY,
    SUM(i.UPDT_MRKT_VALUE) as OVERALL_MARKET_VALUE,
    
    -- Concentration & Distribution Metrics
    AVG(i.TIDES_INV_QTY) as AVG_QTY_PER_PORTFOLIO,
    MAX(i.TIDES_INV_QTY) as MAX_QTY_IN_SINGLE_PORTFOLIO,
    ROUND(
        (SUM(i.UPDT_MRKT_VALUE) * 100.0 / 
         (SELECT SUM(UPDT_MRKT_VALUE) FROM WLF_001_BCM_CASE_INVESTMENTS i2 
          INNER JOIN WLF_001_BCM_CASE_SUMMARY s2 ON i2.CASE_ID = s2.CASE_ID 
          WHERE s2.EXEC_ID = s.EXEC_ID)), 2
    ) as PERCENT_OF_TOTAL_MARKET_VALUE,
    
    -- Performance & Impact Metrics
    SUM(i.UPDT_MRKT_VALUE - i.TIDES_MARKET_VALUE) as OVERALL_DELTA,
    CASE 
        WHEN SUM(i.TIDES_INV_QTY) > 0 
        THEN ROUND((SUM(i.UPDT_MRKT_VALUE - i.TIDES_MARKET_VALUE) / SUM(i.TIDES_INV_QTY)), 4)
        ELSE 0 
    END as AVG_DELTA_PER_SHARE,
    
    SUM(CASE WHEN i.UPDT_MRKT_VALUE > i.TIDES_MARKET_VALUE THEN 1 ELSE 0 END) as PORTFOLIOS_WITH_GAINS,
    SUM(CASE WHEN i.UPDT_MRKT_VALUE < i.TIDES_MARKET_VALUE THEN 1 ELSE 0 END) as PORTFOLIOS_WITH_LOSSES,
    
    -- Price Analysis
    MIN(i.UPDT_CURRENT_PRICE) as MIN_CURRENT_PRICE,
    MAX(i.UPDT_CURRENT_PRICE) as MAX_CURRENT_PRICE,
    ROUND(
        SUM(i.UPDT_CURRENT_PRICE * i.TIDES_INV_QTY) / SUM(i.TIDES_INV_QTY), 4
    ) as AVG_CURRENT_PRICE,
    
    -- Exposure Categories
    COUNT(DISTINCT s.TIDES_BRKR_NAME) as DISTINCT_BROKERAGES,
    (SELECT TOP 1 s2.TIDES_BRKR_NAME 
     FROM WLF_001_BCM_CASE_INVESTMENTS i2 
     INNER JOIN WLF_001_BCM_CASE_SUMMARY s2 ON i2.CASE_ID = s2.CASE_ID 
     WHERE i2.INV_SYMBOL = i.INV_SYMBOL AND s2.EXEC_ID = s.EXEC_ID
     GROUP BY s2.TIDES_BRKR_NAME 
     ORDER BY SUM(i2.UPDT_MRKT_VALUE) DESC
    ) as LARGEST_BROKERAGE_EXPOSURE

FROM WLF_001_BCM_CASE_INVESTMENTS i
INNER JOIN WLF_001_BCM_CASE_SUMMARY s ON i.CASE_ID = s.CASE_ID
WHERE s.EXEC_ID = @EXEC_ID  -- Replace with your specific execution ID or use parameter

GROUP BY i.INV_SYMBOL, s.EXEC_ID
ORDER BY OVERALL_MARKET_VALUE DESC;
